//Version definition
#include "vts_version.hpp"

//Common interface
#include "vts_ui.hpp"

#include "Computer\VTS_RscComputer.hpp"
#include "Computer\VTS_rscskin.hpp"
#include "Computer\VTS_commandhelp.hpp"
#include "Computer\VTS_commandloadsave.hpp"
#include "Computer\VTS_rscgroup.hpp"
#include "Computer\vts_rscgroupteleport.hpp"

#include "shop\VTS_Rscshop.hpp"
#include "shop\VTS_rscShopLoadoutImportExport.hpp"

#include "aar\vts_aar_ui.hpp"

#include "functions\vts_gesture.hpp"

#include "spectator\spectating.hpp"

#include "vhs\vhs_dialog.hpp"

//Specific version




onLoadName = "Virtual Training Space 4.0";		
OnLoadMissionTime = 0;
OnLoadMission = "'There's nothing better than a good game master and there is nothing worse than a bad game master' You...";
author = "Letranger";
loadScreen = "vtstitle.jpg";

respawn = 3;
respawndelay = 4;
disabledAI = 1;

joinUnassigned = 1;

enableDebugConsole = 1;



class Params
{
	class WestPlayable
	{
        //paramsArray[0]
		title=		"West side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	1; 
	};
	class EastPlayable
	{
        //paramsArray[1]
		title=		"East side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	1; 
	};
	class GuerPlayable
	{
        //paramsArray[2]
		title=		"Independent side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	1; 
	};
	class CivPlayable
	{
        //paramsArray[3]
		title=		"Civilian side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	1; 
	};
  class paramclear4
	{//paramsArray[4]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };       	
	class WeaponsType
	{
        //paramsArray[5]
		title=		"Equipment availability :"; 
		texts[]=	{"No weapon at start and on class change, equipement is lost at respawn.","Standard role weapons at spawn, class change, and you respawn with your last equipement."};
		values[]= 	{0,1}; 
		default=	1; 
	};
    class ReviveSetup
	{
        //paramsArray[6]
		title=		"Respawn / Revive Options :"; 
		texts[]=	{"Game basic respawn (Revive Off)","VTS: Revive or Respawn : Everyone can revive","VTS: Revive or Respawn : Only medic can revive","VTS: Revive - No respawn : Everyone can revive","VTS: Revive - No respawn : Only medic can revive"};
		values[]= 	{0,1,2,3,4}; 
		default=	1; 
	};		
    class ReviveNb
	{
        //paramsArray[7]
		title=		"Number of Revives :"; 
		texts[]=	{"Infinite - Revive-Cadet","20 - Revive-Easy ","10 - Revive-Normal","6  - Revive-Hard","3  - Revive-Extreme","1  - Revive-Crazy","0  - No revive-Realistic"};
		values[]= 	{9999,20,10,6,3,1,0}; 
		default=	9999; 
	};
    class ReviveTimeout
	{
        //paramsArray[8]
		title=		"Revive time out (if Revive with lifes or Last stand is On) :"; 
		texts[]=	{"30s.","60s.","2m.","5m.","10m.","20m.","30m.","45m.","60m.","2H."};
		values[]= 	{30,60,120,300,600,1200,1800,2700,3600,7200}; 
		default=	300; 
	};
	
	class ViewDist
	{
        //paramsArray[9]
		title=		"View distance:"; 
		texts[]=	{"1000m","1500m","2000m","2500m","3000m","3500m","4000m","4500m","5000m","6000m","7000m","8000m","10000m"};
		values[]=	{1000,1500,2000,2500,3000,3500,4000,4500,5000,6000,7000,8000,10000}; 
		default=	2500; 
	};
	class ShowGrass
	{//paramsArray[10]
		title= 		"Terrain LOD / Show grass :";
        texts[]= 	{"Full","Medium","Low - No grass"};
        values[]= 	{25,100,200};
        default=	25;
  };
	class NightMoon
	{//paramsArray[11]
		title= 		"Night light :";
        texts[]= 	{"Full moon","No moon"};
        values[]= 	{1,0};
        default=	1;
  };    
	class paramclear
	{//paramsArray[12]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };  
  class Westfriendly
	{//paramsArray[13]
		title= 		"West Side Friendly to :";
        texts[]= 	{"Nobody","East","Resistance","East & Resistance"};
        values[]= 	{0,01,02,012};
        default=	0;
  };
  class Eastfriendly
	{//paramsArray[14]
		title= 		"East Side Friendly to :";
        texts[]= 	{"Nobody","West","Resistance","West & Resistance"};
        values[]= 	{1,10,12,102};
        default=	1;
  };
  class Resistancefriendly
	{//paramsArray[15]
		title= 		"Resistance Side Friendly to :";
        texts[]= 	{"Nobody","West","East","West & East"};
        values[]= 	{2,20,21,201};
        default=	2;
  }; 
	class paramclear2
	{//paramsArray[16]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };
  class AllowClassChange
	{//paramsArray[17]
		title= 		"Allow Class switch at base :";
        texts[]= 	{"Yes, players can change their unit ability","No"};
        values[]= 	{1,0};
        default=	1;
  }; 
  class AllowGroupChange
	{//paramsArray[18]
		title= 		"Allow Squad managing :";
        texts[]= 	{"Yes, players can make/join squads with the communication menu or from the shop","No"};
        values[]= 	{1,0};
        default=	1;
  };
   class AllowGroupLeaderMarkers
	{//paramsArray[19]
		title= 		"Allow Group leader markers :";
        texts[]= 	{"Yes, leaders can see other leaders positions on map","No"};
        values[]= 	{1,0};
        default=	1;
  }; 
  class AllowTeleportToGroupLeader
  {//paramsArray[20]
		title= 		"Allow teleportation from Base to your squad :";
        texts[]= 	{"Yes, players can teleport to their squad from the base","No"};
        values[]= 	{1,0};
        default=	0;
  };
  class AllowPlayersName
	{//paramsArray[21]
		title= 		"Allow friendly player names :";
        texts[]= 	{"Yes, players recognize nearby friendly faces","No"};
        values[]= 	{1,0};
        default=	0;
  };   

  class AddonsSide
	{//paramsArray[22]
		title= 		"Game Addons read from :";
        texts[]= 	{"Game Master","Server"};
        values[]= 	{0,1};
        default=	1;
  };      
  class paramclear3
	{//paramsArray[23]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };  
  class aiautomanage
	{//paramsArray[24]
		title= 		"AI - Smart waypoints management :";
        texts[]= 	{"Yes, VTS will manage AIs with correct behaviors and parameters when required","No, AIs will handle themself"};
        values[]= 	{1,0};
        default=	1;
  };  
   class aiaimshaking
	{//paramsArray[25]
		title= "AI - Aiming precision :";
        texts[]= 	{"Full - Steady hands","High - Sharp hands","Medium - Trained hands","Low - Rookie shaky hands","Hollywood - Don't really try to hit you"};
        values[]= 	{100,95,90,85,50};
        default=	90;
  };
  class paramclear5
	{//paramsArray[26]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };
  class shopstartbalance
	{//paramsArray[27]
		title= 		"Shops : Initial Teams Balance";
        texts[]= 	{"0 $","5 000 $","10 000 $","25 000 $","50 000 $","100 000 $","1 000 000 $","100 000 000 $"};
        values[]= 	{0,5000,10000,25000,50000,100000,1000000,100000000};
        default=	100000000;
  };
  class shopallunlocked
	{//paramsArray[28]
		title= 		"Shops : All items available";
        texts[]= 	{"No, the shops start empty","Yes, everything is in quantity in the shops"};
        values[]= 	{0,1};
        default=	1;
  };  
  class shopunlockmethod
	{//paramsArray[29]
		title= 		"Shops : Items unlock method";
        texts[]= 	{"By Game Master only","By Game Master and Players sales in the shops"};
        values[]= 	{0,1};
        default=	1;
  };
    class shopfreeloadouttype
	{//paramsArray[30]
		title= 		"Shops : Loadouts unlimited and free to buy";
        texts[]= 	{"None","All","Personal Loadouts","Allies Loadouts","Server Loadouts"};
        values[]= 	{-2,-1,0,1,2};
        default=	-2;
  };
      class shopnakedweapononly
	{//paramsArray[31]
		title= 		"Shops : Don't sell pre-equiped weapons";
        texts[]= 	{"Yes, shop will only sell weapons without attachment","No, shop will sell all weapons, including pre-equiped weapons"};
        values[]= 	{1,0};
        default=	1;
  };
  class paramclear6
	{//paramsArray[32]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  }; 
  class allow2ndgm
	{//paramsArray[33]
		title= 		"Enable Game Master assistant slot :";
        texts[]= 	{"False","True"};
        values[]= 	{0,1};
        default=	1;
  }; 
  class AllowMultipleGM
  {//paramsArray[34]
		title= 		"Lock Game Master slots after launch :";
        texts[]= 	{"No, anyone can switch to those slots during the mission","Yes, slots will be reserved to GMs"};
        values[]= 	{1,0};
        default=	1;
  };
  class everyoneisgm
	{//paramsArray[35]
		title= 		"Game Master interface for everyone :";
        texts[]= 	{"False","Everybody's kung-fu fighting"};
        values[]= 	{0,1};
        default=	0;
  };   
                                         
};

class Header
{
    gameType = Team;            //DM, Team, Coop, CTI
    minPlayers = 1;             //min # of players the mission supports
    maxPlayers = 320;            //Max # of players the mission supports
};

class CfgMusic
{
	tracks[]={};


	class tension04_01
	{
		name = "tension04_01";
		sound[] = {"music\tension04_01.ogg", db+5, 1.0};
		titles[] = {0, ""};
	};	
	class tension04_02
	{
		name = "tension04_02";
		sound[] = {"music\tension04_02.ogg", db+5, 1.0};
		titles[] = {0, ""};
	};	
	class tension04_03
	{
		name = "tension04_03";
		sound[] = {"music\tension04_03.ogg", db+5, 1.0};
		titles[] = {0, ""};
	};	
	
};

class CfgSounds
{
	sounds[] = {computer,computerok};
	class computer
	{
		name = "computer";
		sound[] = {"sound\computer.ogg", 1, 1};
		titles[] = {"computer"};
	};
	class computerok
	{
		name = "computerok";
		sound[] = {"sound\computerok.ogg", 1, 1};
		titles[] = {"computerok"};
	};	
	class vtsliftbeep
	{
		name = "vtsliftbeep";
		sound[] = {"sound\vtsliftbeep.ogg", db-7.5, 1};
		titles[] = {"vtsliftbeep"};
	};	
	class vtslifterror
	{
		name = "vtslifterror";
		sound[] = {"sound\vtslifterror.ogg", db-7.5, 1};
		titles[] = {"vtslifterror"};
	};		
};

class RscTitles
{
	titles[]={"vtsimg"};

	class vtsimg
	{
		idd=-1;
		movingEnable=0;
		duration=5;  
		fadein=2; 
        fadeout = 1;		  
		name="vtsimg";
		controls[]={"GR"};

		class GR : VTS_RscPicture
		{
			style=48;
			text="vtstitle.jpg";
			sizeEx = 0.4;
			x=0.25;
            y=0.3;
            w=0.5;
            h=0.4;
        };
	};
	
	
	class VTS_Counter_Dialog 
	{
		idd = 19457;
		movingEnable = 0;
		enableSimulation = 1;
		enableDisplay = 1;
		duration = 2147483647;
		fadein = 0;
		fadeout = 0;	
		class RscPicture;
		onLoad = "uiNamespace setVariable [""vts_counter_dialog_id"", _this select 0]";
		class controls 
		{
			class vts_counter_bkg: RscPicture
			{
				idc = 2331;
				type = 0;
				style = 48;
				text = "#(argb,8,8,3)color(0,0,0,0.5)";
				x = 0.2187925 * safezoneW + safezoneX;
				y = 0.0240231 * safezoneH + safezoneY;
				w = 0.160402 * safezoneW;
				h = 0.0699966 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;				
			};
			class vts_counter_text
			{
				idc = 2332;
				type = 1;
				style = 0x02;
				text = "24:00"; //--- ToDo: Localize;
				x = 0.2260836 * safezoneW + safezoneX;
				y = 0.0380224 * safezoneH + safezoneY;
				w = 0.14582 * safezoneW;
				h = 0.041998 * safezoneH;
				sizeEx = 0.06;
				size = 0.06;
				colorBackground[] = {0,0,0,0.0};
				colorText[] = {1.0,1.0,1.0,1.0};
				colorDisabled[] = {0.0,0.0,0.0,0};
				colorBackgroundDisabled[] = {0,0.0,0};
				colorBackgroundActive[] = {0.0,0.0,0.0,0.0};
				colorFocused[] = {0,0,0,0.0};
				colorShadow[] = {0,0,0,0.0};
				colorBorder[] = {0,0,0,0};	
				font = "TahomaB";
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 1;		
				offsetX = 0.000;
				offsetY = 0.000;
				offsetPressedX = 0.000;
				offsetPressedY = 0.000;
				borderSize = 0;	
				soundEnter[] = {};
				soundPush[] = {};
				soundClick[] = {};
				soundEscape[] = {};					
			};
		};
	};
	class vts_lifthud 
	{
		idd = 19458;
		movingEnable = 1;
		enableSimulation = 1;
		enableDisplay = 1;
		onLoad = "uiNamespace setVariable [""vts_lifthud_id"", _this select 0]";
		duration = 2147483647;
		fadein = 0;
		fadeout = 0;
		class RscPicture;
		class RscText;
		class controls 
		{	
			class vts_lifthudbkg: RscPicture
			{
				idc = 1200;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,0.5)";
				x = 0.106154 * safezoneW + safezoneX;
				y = 0.681966 * safezoneH + safezoneY;
				w = 0.102108 * safezoneW;
				h = 0.167969 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud2: RscPicture
			{
				idc = 1201;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,1)";
				x = 0.106154 * safezoneW + safezoneX;
				y = 0.681966 * safezoneH + safezoneY;
				w = 0.00583476 * safezoneW;
				h = 0.167969 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud3: RscPicture
			{
				idc = 1202;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,1)";
				x = 0.201968 * safezoneW + safezoneX;
				y = 0.681966 * safezoneH + safezoneY;
				w = 0.00583476 * safezoneW;
				h = 0.167969 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud4: RscPicture
			{
				idc = 1203;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,1)";
				x = 0.10907 * safezoneW + safezoneX;
				y = 0.683366 * safezoneH + safezoneY;
				w = 0.0948149 * safezoneW;
				h = 0.0069987 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud5: RscPicture
			{
				idc = 1204;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,1)";
				x = 0.109072 * safezoneW + safezoneX;
				y = 0.841537 * safezoneH + safezoneY;
				w = 0.0948149 * safezoneW;
				h = 0.0069987 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud6: RscPicture
			{
				idc = 1205;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,0.5)";
				x = 0.107154 * safezoneW + safezoneX;
				y = 0.763152 * safezoneH + safezoneY;
				w = 0.0948149 * safezoneW;
				h = 0.0069987 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthud7: RscPicture
			{
				idc = 1206;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(0,0,0,0.5)";
				x = 0.155749 * safezoneW + safezoneX;
				y = 0.687567 * safezoneH + safezoneY;
				w = 0.00583476 * safezoneW;
				h = 0.153971 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};
			class vts_lifthudgreen: RscPicture
			{
				idc = 1207;
				type = 0;
				style = 48;				
				text = "#(argb,8,8,3)color(1,0.5,0,0.5)";
				x = 0.151374 * safezoneW + safezoneX;
				y = 0.751957 * safezoneH + safezoneY;
				w = 0.0145869 * safezoneW;
				h = 0.0279948 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};	
			class vts_lifthudtxt: RscText
			{
				idc = 1208;
				type = 0;
				style = 2;				
				text = "";
				x = 0.10907 * safezoneW + safezoneX;
				y = 0.693366 * safezoneH + safezoneY;
				w = 0.0948149 * safezoneW;
				h = 0.0159987 * safezoneH;
				colorText[] = {1,1,1,1};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0.015 * safezoneH;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;						
			};			
		};
	};
	class vts_spymask 
	{	
		idd = 19459;
		enableSimulation = 1;
		enableDisplay = 1;
		onLoad = "uiNamespace setVariable [""vts_spyhud_id"", _this select 0]";
		duration = 2147483647;
		fadein = 0;
		fadeout = 0;
		class RscPicture;	
		class controls 
		{	
			class vts_spymaskpicture: RscPicture
			{
				idc = 1200;
				type = 0;
				style = 48;		
				text = "vts_mask.paa";
				x = 0.650684 * safezoneW + safezoneX;
				y = 0.0100911 * safezoneH + safezoneY;
				w = 0.0656411 * safezoneW;
				h = 0.0979818 * safezoneH;
				colorText[] = {1,1,1,0.75};
				colorBackground[] = {0, 0, 0, 0.0};
				font = "TahomaB";
				sizeEx = 0;
				lineSpacing = 0;
				fixedWidth = 0;
				shadow = 0;		
			};
		};
	};
}; 

class CfgCommunicationMenu
{
    class vtsviewdistanceup
    {
        text = "View distance up"; 
        submenu = ""; 
        expression = "if (viewdistance + 500 <= 20000) then {setviewdistance (viewdistance + 500)}; hint (""View distance set to "" + str viewdistance)";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };
    class vtsviewdistancedown
    {
        text = "View distance down"; 
        submenu = ""; 
        expression = "if (viewdistance - 500 >= 1000) then {setviewdistance (viewdistance - 500)}; hint (""View distance set to "" + str viewdistance)";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };	
    class vtsfixheadbug
    {
        text = "Fix head bug"; 
        submenu = ""; 
        expression = "[this] execVM ""functions\headbug.sqf"";";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };	
    class vtsfixswimbug
    {
        text = "Fix Swim/FreeFall animation bug"; 
        submenu = ""; 
        expression = "[this] execVM ""functions\swimbug.sqf"";";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };		
    class vtssitonchair
    {
        text = "Sit on chair"; 
        submenu = ""; 
        expression = "[] spawn vts_sitonchair;";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };		
	class vtsweapononback
	{
	    text = "Put weapon on Back"; 
        submenu = ""; 
        expression = "[] spawn vts_weapononback";
        enable = "1"; 
        removeAfterExpressionCall = 0;
	};
	class vtsweapononhand
	{
	    text = "Put weapon in Hand"; 
        submenu = ""; 
        expression = "[] spawn vts_weapononhand";
        enable = "1"; 
        removeAfterExpressionCall = 0;
	};
	class vtsdummycom2
	{
	    text = ""; 
        submenu = ""; 
        expression = ";";
        enable = "1"; 
        removeAfterExpressionCall = 0;
	};	
	class vtsdummycom3
	{
	    text = ""; 
        submenu = ""; 
        expression = ";";
        enable = "1"; 
        removeAfterExpressionCall = 0;
	};
    class vtsgroupmanager
    {
        text = "Squad manager interface"; 
        submenu = ""; 
        expression = "[] execVM ""functions\groupmanager.sqf"";";
        enable = "1"; 
        removeAfterExpressionCall = 0;
    };			
};









